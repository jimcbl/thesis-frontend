{"version":3,"sources":["components/Homepage/index.js","Nav.js","components/AboutUs/index.jsx","components/AboutVDP/index.js","App.js","serviceWorker.js","index.js"],"names":["mediaRecorder","Navbar","useState","toggleBurger","setToggleBurger","className","role","aria-label","to","id","aria-expanded","data-target","onClick","aria-hidden","chunks","Homepage","isRecording","setIsRecording","preview","setPreview","file","setFile","undefined","result","setResult","isAPIProcess","setAPI","isLoading","setLoading","useEffect","a","navigator","getUserMedia","mediaDevices","audio","stream","MediaRecorder","ondataavailable","e","data","size","push","console","log","startRecording","handleReset","start","stopRecording","stop","saveAudio","blob","Blob","type","myBlob","audioContext","AudioContext","fileReader","FileReader","onloadend","myArrayBuffer","decodeAudioData","audioBuffer","wav","toWav","DataView","audioURL","URL","createObjectURL","readAsArrayBuffer","convertBlobToAudioBuffer","handleSubmit","formData","FormData","append","name","fetch","method","body","then","res","json","src","alt","accept","multiple","onDrop","acceptedFile","previewURL","getRootProps","getInputProps","style","outline","display","variant","textTransform","length","Chip","label","onDelete","controls","marginBottom","target","checked","defaultChecked","disabled","color","fontSize","predict","correct","AboutUs","AboutVDP","App","basename","process","Nav","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gMAWIA,E,yDCoDWC,EA5DA,WAAO,IAAD,EACuBC,oBAAS,GADhC,mBACVC,EADU,KACIC,EADJ,KAGjB,OACI,yBAAKC,UAAU,SAASC,KAAK,aAAaC,aAAW,mBACjD,yBAAKF,UAAU,aACX,yBAAKA,UAAU,gBAKX,kBAAC,IAAD,CACIG,GAAG,IACHC,GAAG,aACHJ,UAAW,yBAA2BF,EAAe,YAAc,IACnEG,KAAK,SACLC,aAAW,OACXG,gBAAc,QACdC,cAAY,cACZC,QAAS,kBAAMR,GAAiBD,KAEhC,0BAAMU,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAI1B,yBACIJ,GAAG,cACHJ,UAAW,gBAAkBF,EAAe,YAAc,KAE1D,yBAAKE,UAAU,gBACX,kBAAC,IAAD,CACIG,GAAG,IACHH,UAAU,cACVO,QAAS,kBAAMR,GAAiBD,KAHpC,QAOA,kBAAC,IAAD,CACIK,GAAG,YACHH,UAAU,cACVO,QAAS,kBAAMR,GAAiBD,KAHpC,YAOA,kBAAC,IAAD,CACIK,GAAG,QACHH,UAAU,cACVO,QAAS,kBAAMR,GAAiBD,KAHpC,a,mGDvCpBW,EAAS,GA8NEC,EA3NE,WAAO,IAAD,EACmBb,oBAAS,GAD5B,mBACZc,EADY,KACCC,EADD,OAEWf,qBAFX,mBAEZgB,EAFY,KAEHC,EAFG,OAGKjB,mBAAS,IAHd,mBAGZkB,EAHY,KAGNC,EAHM,OAISnB,wBAASoB,GAJlB,mBAIZC,EAJY,KAIJC,EAJI,OAKYtB,oBAAS,GALrB,mBAKZuB,EALY,KAKEC,EALF,OAMaxB,oBAAS,GANtB,mBAMZyB,EANY,KAMDC,EANC,KAQnBC,qBAAU,WACN,sBAAC,4BAAAC,EAAA,0DACOC,UAAUC,aADjB,gCAE4BD,UAAUE,aAAaD,aAAa,CAAEE,OAAO,IAFzE,OAEaC,EAFb,QAGOnC,EAAgB,IAAIoC,cAAcD,IACpBE,gBAAkB,SAAAC,GACxBA,EAAEC,MAAQD,EAAEC,KAAKC,KAAO,GACxB1B,EAAO2B,KAAKH,EAAEC,OAN7B,sBAUOG,QAAQC,IAAI,8CAVnB,0CAAD,KAaD,IAEH,IAIMC,EAAiB,WACnBC,IACA5B,GAAe,GACfjB,GAAiBA,EAAc8C,MAAM,KAGnCC,EAAgB,WAClB9B,GAAe,GACfjB,GAAiBA,EAAcgD,OAC/BC,KAuBEA,EAAY,WACd,IAAMC,EAAO,IAAIC,KAAKrC,EAAQ,CAAEsC,KAAM,eACtCV,QAAQC,IAAI,OAAQO,GAtBS,SAAAG,GAC7B,IAAMC,EAAe,IAAIC,aACnBC,EAAa,IAAIC,WACvBD,EAAWE,UAAY,WACnB,IAAIC,EAAgBH,EAAWjC,OAC/B+B,EAAaM,gBAAgBD,GAAe,SAAAE,GAExC,IAAMC,EAAMC,IAAMF,GACZX,EAAO,IAAIC,KAAK,CAAC,IAAIa,SAASF,IAAO,CACvCV,KAAM,cAEJa,EAAWC,IAAIC,gBAAgBjB,GACrC/B,EAAW8C,GAEX5C,EAAQ6B,OAIhBM,EAAWY,kBAAkBf,GAK7BgB,CAAyBnB,IAGvBoB,EAAY,uCAAG,4BAAAxC,EAAA,uDACXyC,EAAW,IAAIC,UACZC,OAAO,OAAQrD,EAAMA,EAAKsD,MACnC9C,GAAW,GACX+C,MAAMlD,EA3EM,gCADR,gCA4EoC,CACpCmD,OAAQ,OACRC,KAAMN,IACPO,MAAK,SAAAC,GACJnD,GAAW,GACPmD,GACAA,EAAIC,OAAOF,MAAK,SAAAvC,GACZA,GAAQf,EAAUe,SAXb,2CAAH,qDAoBZM,EAAc,WAChBrB,EAAU,IACVH,EAAQ,IACRF,EAAW,MACXS,GAAW,GACXd,EAAS,IAGb,OACI,6BAAST,UAAU,UAAUI,GAAG,YAC5B,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,2BACX,4BAEIA,UAAW,kBAAoBW,EAAc,eAAiB,IAC9DJ,QA/EN,WAClB,OAAOI,EAAc+B,IAAkBH,MAgFf,yBACIvC,UAAU,cACV4E,IAAI,uEACJC,IAAI,mBAKpB,yBAAK7E,UAAU,UACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACI8E,OAAQ,CAAC,QACTC,UAAU,EAEVC,OAAQ,SAAAC,GACJzC,IACAxB,EAAQiE,EAAa,IACrB5C,QAAQC,IAAI,kBAAmB2C,EAAa,IAC5C,IAAMC,EAAarB,IAAIC,gBAAgBmB,EAAa,IACpDnE,EAAWoE,GAEX7C,QAAQC,IAAI,aAAc4C,MAG7B,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,wBAASD,IACL,2CACQC,IADR,CAEIC,MAAO,CAAEC,QAAS,OAAQC,QAAS,WAEvC,yBACIC,QAAQ,OACRxF,UAAU,0BACVqF,MAAO,CAAEI,cAAe,SAExB,yBAAKzF,UAAU,iBACX,kBAAC,IAAD,CAAYA,UAAU,oBAO9C,yBAAKA,UAAU,kBACVe,EAAK2E,OAAS,GACX,kBAACC,EAAA,EAAD,CAAMC,MAAO7E,EAAK,GAAGsD,KAAMwB,SAAU,kBAAM7E,EAAQ,WAMvE,yBAAKhB,UAAU,iBACVa,GACG,2BACIiF,UAAQ,EACR9F,UAAU,QACVqF,MAAO,CAAEU,aAAc,OAAQR,QAAS,UAExC,4BAAQX,IAAK/D,EAASkC,KAAK,cAL/B,oCAOI,uCAPJ,cAYR,2BAAO/C,UAAU,YACb,2BACI+C,KAAK,WACLxC,QA3FK,SAAA0B,GACrBZ,EAAOY,EAAE+D,OAAOC,UA2FAC,eAAgB9E,IAJxB,cASA,yBAAKpB,UAAU,iBACX,yBAAKA,UAAU,wBACX,4BACImG,SAA0B,IAAhBpF,EAAK2E,OACf1F,UAAU,aACVO,QAAS0D,GAHb,WAQJ,yBAAKjE,UAAU,wBACX,4BAEIA,UAAU,YACVO,QAASiC,GAHb,WASPlB,GACG,yBAAKtB,UAAU,mBAAmBsB,GAAa,kBAAC,OAAD,CAAM8E,MAAM,aAE9DlF,GACG,yBAAKlB,UAAU,qDACX,yBAAKqF,MAAO,CAAEgB,SAAU,OAAQN,aAAc,QAA9C,WACA,yBAAK/F,UAAU,iDAAf,YACckB,EAAOoF,SAErB,yBAAKtG,UAAU,iDAAf,YACckB,EAAOqF,aElL9BC,EA3CC,WACZ,OACI,6BAASxG,UAAU,iCAAiCI,GAAG,YACnD,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBACIA,UAAU,QACV4E,IAAI,sEACJC,IAAI,MAGZ,uBAAG7E,UAAU,QAAb,YACA,uBAAGA,UAAU,WAAb,wKAMJ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBACIA,UAAU,QACV4E,IAAI,sEACJC,IAAI,MAGZ,uBAAG7E,UAAU,QAAb,cACA,uBAAGA,UAAU,WAAb,gKCsMbyG,EApOE,WACb,OACI,yBAAKzG,UAAU,iCAAiCI,GAAG,iBAC/C,yBAAKJ,UAAU,aACX,6BAASA,UAAU,WACf,gCACI,wBAAIA,UAAU,mCAAd,uGAIA,uBAAGA,UAAU,iBAAb,mEAEI,6BAFJ,oEAMR,6BAASA,UAAU,WACf,gCACI,wBAAIA,UAAU,cAAd,oBAEJ,uBAAGA,UAAU,WAAb,uSAMA,uBAAGA,UAAU,WAAb,2RAMA,uBAAGA,UAAU,WAAb,6IAIA,uBAAGA,UAAU,WAAb,gMAKA,uBAAGA,UAAU,WAAb,8EAIJ,6BAASA,UAAU,WACf,wBAAIA,UAAU,cAAd,YACA,uBAAGA,UAAU,WAAb,+nBAaJ,6BAASA,UAAU,WACf,wBAAIA,UAAU,cAAd,gBACA,uBAAGA,UAAU,WAAb,gkBAUA,uBAAGA,UAAU,WAAb,+jBAYJ,6BAASA,UAAU,WACf,wBAAIA,UAAU,cAAd,oBACA,uBAAGA,UAAU,WAAb,2fAUJ,6BAASA,UAAU,WACf,wBAAIA,UAAU,cAAd,kBACA,uBAAGA,UAAU,WAAb,0dAUJ,6BAASA,UAAU,WACf,wBAAIA,UAAU,cAAd,YACA,uBAAGA,UAAU,WAAb,sRAOJ,6BAASA,UAAU,WACf,wBAAIA,UAAU,cAAd,UACA,uBAAGA,UAAU,WAAb,wIAIA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WAAf,kBAEI,4BACI,4BACI,4CADJ,+EAGA,4BACI,6DADJ,gFAIA,4BACI,oDADJ,kFAOR,2BAAOA,UAAU,gCACb,+BACI,4BACI,6BACA,0CACA,0CAGR,+BACI,4BACI,+CACA,uCACA,wCAEJ,4BACI,oDACA,uCACA,2CAMhB,uBAAGA,UAAU,WAAb,0GAKJ,yBAAKA,UAAU,gBACX,6BAASA,UAAU,+BACf,wBAAIA,UAAU,cAAd,cACA,yBAAKA,UAAU,WACX,4BACI,wBAAIA,UAAU,QACV,2BACI,4CADJ,2FAIA,4BACI,6EACA,sGAIA,wFAKR,wBAAIA,UAAU,QACV,2BACI,yCADJ,uIAKA,4BACI,gDACA,4DACA,kDAGR,wBAAIA,UAAU,oBACV,2BACI,mDADJ,yKAMA,4BACI,8DACA,uJAWxB,yBAAKA,UAAU,sBCvMhB0G,EAhBH,WACR,OACI,yBAAK1G,UAAU,eACX,kBAAC,IAAD,CAAe2G,SAAUC,oBACrB,kBAACC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWR,IACnC,kBAAC,IAAD,CAAOO,KAAK,QAAQC,UAAWtG,IAC/B,kBAAC,IAAD,CAAOsG,UAAW,kBAAM,sDCNxBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBhG,WACrBA,UAAUiG,cAAcC,MACrBnD,MAAK,SAAAoD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3F,QAAQ2F,MAAMA,EAAMC,c","file":"static/js/main.b774bf47.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Chip } from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Ring } from 'react-spinners-css';\r\nimport toWav from 'audiobuffer-to-wav';\r\n\r\nconst API = 'https://104.199.147.226:8000/';\r\nconst API_PROCESS = 'https://104.199.147.226:8001/';\r\n\r\nlet chunks = [];\r\nlet mediaRecorder;\r\n\r\nconst Homepage = () => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [preview, setPreview] = useState();\r\n    const [file, setFile] = useState([]);\r\n    const [result, setResult] = useState(undefined);\r\n    const [isAPIProcess, setAPI] = useState(true);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (navigator.getUserMedia) {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n                mediaRecorder = new MediaRecorder(stream);\r\n                mediaRecorder.ondataavailable = e => {\r\n                    if (e.data && e.data.size > 0) {\r\n                        chunks.push(e.data);\r\n                    }\r\n                };\r\n            } else {\r\n                console.log('Media Decives will work only with SSL.....');\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const handleOnClick = () => {\r\n        return isRecording ? stopRecording() : startRecording();\r\n    };\r\n\r\n    const startRecording = () => {\r\n        handleReset();\r\n        setIsRecording(true);\r\n        mediaRecorder && mediaRecorder.start(10);\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        setIsRecording(false);\r\n        mediaRecorder && mediaRecorder.stop();\r\n        saveAudio();\r\n    };\r\n\r\n    const convertBlobToAudioBuffer = myBlob => {\r\n        const audioContext = new AudioContext();\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            let myArrayBuffer = fileReader.result;\r\n            audioContext.decodeAudioData(myArrayBuffer, audioBuffer => {\r\n                // Do something with audioBuffer\r\n                const wav = toWav(audioBuffer);\r\n                const blob = new Blob([new DataView(wav)], {\r\n                    type: 'audio/wav'\r\n                });\r\n                const audioURL = URL.createObjectURL(blob);\r\n                setPreview(audioURL);\r\n\r\n                setFile(blob);\r\n            });\r\n        };\r\n        //Load blob\r\n        fileReader.readAsArrayBuffer(myBlob);\r\n    };\r\n    const saveAudio = () => {\r\n        const blob = new Blob(chunks, { type: 'audio/webm' });\r\n        console.log('blob', blob);\r\n        convertBlobToAudioBuffer(blob);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file, file.name);\r\n        setLoading(true);\r\n        fetch(isAPIProcess ? API_PROCESS : API, {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res) {\r\n                res.json().then(data => {\r\n                    data && setResult(data);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handlePreprocess = e => {\r\n        setAPI(e.target.checked);\r\n    };\r\n    const handleReset = () => {\r\n        setResult('');\r\n        setFile([]);\r\n        setPreview(null);\r\n        setLoading(false);\r\n        chunks = [];\r\n    };\r\n\r\n    return (\r\n        <section className=\"section\" id=\"homepage\">\r\n            <div className=\"container\">\r\n                <div className=\"columns\">\r\n                    <div className=\"column\">\r\n                        <div className=\"record-button-container\">\r\n                            <button\r\n                                // disabled={file.length > 0}\r\n                                className={'record-button ' + (isRecording ? 'is-recording' : '')}\r\n                                onClick={handleOnClick}\r\n                            >\r\n                                <img\r\n                                    className=\"record-icon\"\r\n                                    src=\"https://storage.googleapis.com/dataset-nlp-dp2-1/static/mic_icon.svg\"\r\n                                    alt=\"mic-wrapper\"\r\n                                />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"upload\">\r\n                            <div className=\"dropzone\">\r\n                                <Dropzone\r\n                                    accept={['.wav']}\r\n                                    multiple={false}\r\n                                    // disabled={file.length > 0}\r\n                                    onDrop={acceptedFile => {\r\n                                        handleReset();\r\n                                        setFile(acceptedFile[0]);\r\n                                        console.log('acceptedFile[0]', acceptedFile[0]);\r\n                                        const previewURL = URL.createObjectURL(acceptedFile[0]);\r\n                                        setPreview(previewURL);\r\n\r\n                                        console.log('previewURL', previewURL);\r\n                                    }}\r\n                                >\r\n                                    {({ getRootProps, getInputProps }) => (\r\n                                        <div {...getRootProps()}>\r\n                                            <input\r\n                                                {...getInputProps()}\r\n                                                style={{ outline: 'none', display: 'none' }}\r\n                                            />\r\n                                            <div\r\n                                                variant=\"text\"\r\n                                                className=\"record-button-container\"\r\n                                                style={{ textTransform: 'none' }}\r\n                                            >\r\n                                                <div className=\"record-button\">\r\n                                                    <AddBoxIcon className=\"add_icon\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </Dropzone>\r\n                            </div>\r\n                            <div className=\"file_container\">\r\n                                {file.length > 0 && (\r\n                                    <Chip label={file[0].name} onDelete={() => setFile([])}></Chip>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"audio-preview\">\r\n                    {preview && (\r\n                        <audio\r\n                            controls\r\n                            className=\"audio\"\r\n                            style={{ marginBottom: '15px', display: 'block' }}\r\n                        >\r\n                            <source src={preview} type=\"audio/ogg\" />\r\n                            Your browser does not support the\r\n                            <code>audio</code> element.\r\n                        </audio>\r\n                    )}\r\n                </div>\r\n\r\n                <label className=\"checkbox\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onClick={handlePreprocess}\r\n                        defaultChecked={isAPIProcess}\r\n                    />\r\n                    Preprocess\r\n                </label>\r\n\r\n                <div className=\"btn_container\">\r\n                    <div className=\"submit_btn_container\">\r\n                        <button\r\n                            disabled={file.length === 0}\r\n                            className=\"submit_btn\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"submit_btn_container\">\r\n                        <button\r\n                            // disabled={file.length === 0}\r\n                            className=\"reset_btn\"\r\n                            onClick={handleReset}\r\n                        >\r\n                            Reset\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {isLoading && (\r\n                    <div className=\"loading-wrapper\">{isLoading && <Ring color=\"#be97e8\" />}</div>\r\n                )}\r\n                {result && (\r\n                    <div className=\"result has-text-centered has-text-weight-semibold\">\r\n                        <div style={{ fontSize: '24px', marginBottom: '8px' }}>Result:</div>\r\n                        <div className=\"has-text-weight-normal is-uppercase is-size-5\">\r\n                            Predict: {result.predict}\r\n                        </div>\r\n                        <div className=\"has-text-weight-normal is-uppercase is-size-5\">\r\n                            Correct: {result.correct}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    const [toggleBurger, setToggleBurger] = useState(false);\r\n\r\n    return (\r\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-brand\">\r\n                    {/* <Link className=\"navbar-item\" to=\"/\">\r\n                        <p className=\"logo-text\">LOGO</p>\r\n                    </Link> */}\r\n\r\n                    <Link\r\n                        to=\"/\"\r\n                        id=\"burgerMenu\"\r\n                        className={'navbar-burger burger ' + (toggleBurger ? 'is-active' : '')}\r\n                        role=\"button\"\r\n                        aria-label=\"menu\"\r\n                        aria-expanded=\"false\"\r\n                        data-target=\"menuContent\"\r\n                        onClick={() => setToggleBurger(!toggleBurger)}\r\n                    >\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div\r\n                    id=\"menuContent\"\r\n                    className={'navbar-menu ' + (toggleBurger ? 'is-active' : '')}\r\n                >\r\n                    <div className=\"navbar-start\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"navbar-item\"\r\n                            onClick={() => setToggleBurger(!toggleBurger)}\r\n                        >\r\n                            Home\r\n                        </Link>\r\n                        <Link\r\n                            to=\"/about-us\"\r\n                            className=\"navbar-item\"\r\n                            onClick={() => setToggleBurger(!toggleBurger)}\r\n                        >\r\n                            About us\r\n                        </Link>\r\n                        <Link\r\n                            to=\"/demo\"\r\n                            className=\"navbar-item\"\r\n                            onClick={() => setToggleBurger(!toggleBurger)}\r\n                        >\r\n                            Demo\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst AboutUs = () => {\r\n    return (\r\n        <section className=\"hero is-fullheight-with-navbar\" id=\"about-us\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <div className=\"profiles\">\r\n                        <div className=\"profile\">\r\n                            <div className=\"avatar\">\r\n                                <img\r\n                                    className=\"image\"\r\n                                    src=\"https://storage.googleapis.com/dataset-nlp-dp2-1/static/ava_thu.jpg\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <p className=\"name\">Thu Tran</p>\r\n                            <p className=\"content\">\r\n                                My dream since childhood is to change the world. Now, as a wannabe\r\n                                adult, I'm trying to learn and improve myself as much as I can.\r\n                                Because baby steps count, right?\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"profile\">\r\n                            <div className=\"avatar\">\r\n                                <img\r\n                                    className=\"image\"\r\n                                    src=\"https://storage.googleapis.com/dataset-nlp-dp2-1/static/ava_jim.jpg\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <p className=\"name\">Thinh Tran</p>\r\n                            <p className=\"content\">\r\n                                A fourth year student majoring in Computer Science. Logical but\r\n                                creative thinker. Possess adequate knowledge about media and\r\n                                technical related skills.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\n\r\nconst AboutVDP = () => {\r\n    return (\r\n        <div className=\"hero is-fullheight-with-navbar\" id=\"about-project\">\r\n            <div className=\"container\">\r\n                <section className=\"section\">\r\n                    <header>\r\n                        <h1 className=\"title is-1 has-text-weight-bold\">\r\n                            Combination of voice recognition and language model for an end-to-end\r\n                            Vietnamese speech recognition\r\n                        </h1>\r\n                        <p className=\"subtitle meta\">\r\n                            Students: Tran Ngoc Minh Thu - 1652599, Tran Duc Thinh - 1652578\r\n                            <br /> Instructors: Assoc. Prof. Quan Thanh Tho, Dr. Nguyen Duc Dung\r\n                        </p>\r\n                    </header>\r\n                </section>\r\n                <section className=\"section\">\r\n                    <header>\r\n                        <h3 className=\"title is-3\">Acknowledgement</h3>\r\n                    </header>\r\n                    <p className=\"content\">\r\n                        We would love to show our deep and honest gratitude to Assoc. Prof. Quản\r\n                        Thành Thơ and Dr. Nguyễn Đức Dũng. We are eternally grateful and indebted to\r\n                        your guidance, advice, enthusiasm and encouragement in helping us\r\n                        researching and implementing this project.\r\n                    </p>\r\n                    <p className=\"content\">\r\n                        We wish to express our appreciation to all of our faculty lecturers, without\r\n                        whom we would not have the necessary knowledge to finish our project. Later,\r\n                        when equipped with precious expertise from this university, we will be\r\n                        confidently heading into our future and be phenomenal.\r\n                    </p>\r\n                    <p className=\"content\">\r\n                        We also wish to acknowledge the support from our family and friends (Dũng,\r\n                        Toàn, Như, Duy, ...), for they always stand by us\r\n                    </p>\r\n                    <p className=\"content\">\r\n                        Despite our commitment, we are aware that this project is still inadequate\r\n                        and contains inevitable errors. We would love to receive feedback from\r\n                        lecturers in order to improve furthermore.\r\n                    </p>\r\n                    <p className=\"content\">\r\n                        Finally, we wish you health, prosperity, and success in your chosen paths\r\n                    </p>\r\n                </section>\r\n                <section className=\"section\">\r\n                    <h3 className=\"title is-3\">Abstract</h3>\r\n                    <p className=\"content\">\r\n                        The speech to text problem is not uncommon, since automatic speech\r\n                        recognition is an important feature in the modern world. There are some\r\n                        existing models regarding this particular problem. However, there are few,\r\n                        if not rare, existing models for languages other than English. This is\r\n                        because of the differences in the characteristics of each language, so the\r\n                        implementation of speech to text systems varies remarkably for each country.\r\n                        Our graduation project is to build a Vietnamese end-to-end automatic speech\r\n                        recognition for extracurricular activities, using voice recognition and\r\n                        language model, based on the Deep Speech 2 model.\r\n                    </p>\r\n                </section>\r\n\r\n                <section className=\"section\">\r\n                    <h3 className=\"title is-3\">Introduction</h3>\r\n                    <p className=\"content\">\r\n                        Our university has very active and energetic extracurricular activities. The\r\n                        activities are usually organized by a group of students. They handle, inform\r\n                        and announce information through a Facebook fan page. So when big events are\r\n                        approaching, such as Mua He Xanh, Xuan Tinh Nguyen,… the fan page that\r\n                        organizes those activities are usually bombarded with a lot of questions\r\n                        from students. But the number of admins is not enough to handle all of\r\n                        those, so the process is quite slow and frustrating. Students have to wait\r\n                        for a while before they can get their answers.\r\n                    </p>\r\n                    <p className=\"content\">\r\n                        Our thesis is a part of a bigger application, which can enhance and improve\r\n                        the user experience when using chat applications to ask for services about\r\n                        extracurricular activities. This application includes 2 parts: an ASR system\r\n                        for transferring speech to text so that students don’t have to type since\r\n                        speaking is much faster, and an Intelligent Chatbot so that students can get\r\n                        the information they need automatically, without depending on manual\r\n                        interactions. Our thesis focuses on the ASR system, which is built under the\r\n                        influence of the renowned Deep Speech 2.\r\n                    </p>\r\n                </section>\r\n\r\n                <section className=\"section\">\r\n                    <h3 className=\"title is-3\">Voice recognizer</h3>\r\n                    <p className=\"content\">\r\n                        Based on Deep Speech 2, our Voice Recognizer has the following architecture:\r\n                        2 layers of CNN, 2 layers of bidirectional RNN with LSTM and hidden layer\r\n                        size of 600, 1 fully connected layer. The input is an audio file,\r\n                        represented as a Spectrogram. After having this spectrogram go through the\r\n                        neural network, the text will go through CTC (Connectionist Temporal\r\n                        Classification). Then we will have a raw text from the audio. This raw text\r\n                        will be the input for further correction from our Language Model.\r\n                    </p>\r\n                </section>\r\n                <section className=\"section\">\r\n                    <h3 className=\"title is-3\">Language model</h3>\r\n                    <p className=\"content\">\r\n                        In order to produce the most correct transcript out of the user’s audio\r\n                        input, we use Language Model. A statistical language model is a probability\r\n                        distribution over sequences of words. The general problem statement for the\r\n                        language model is to correct Vietnamese sentences with wrong spelling. In\r\n                        this thesis, it means that the language model will correct the sentence\r\n                        generated from the Voice Recognizer Our language model is the Left2Right and\r\n                        Right2Left model.\r\n                    </p>\r\n                </section>\r\n                <section className=\"section\">\r\n                    <h3 className=\"title is-3\">Our data</h3>\r\n                    <p className=\"content\">\r\n                        We recorded about 1500 audio files based on scripts of students asking for\r\n                        information about extracurricular activities. In total, it is approximately\r\n                        2 hours. After the augmentation, including adding noise, changing speed,\r\n                        adding padding, we have around 10 hours in total.\r\n                    </p>\r\n                </section>\r\n                <section className=\"section\">\r\n                    <h3 className=\"title is-3\">Result</h3>\r\n                    <p className=\"content\">\r\n                        Result for testing untrained audio files that were recorded in a complete\r\n                        different environment and going through the Language Model\r\n                    </p>\r\n                    <div className=\"row\">\r\n                        <div className=\"content\">\r\n                            Example result:\r\n                            <ul>\r\n                                <li>\r\n                                    <b>Ground truth:</b> CHO MÌNH HỎI CHÚT VỀ TIẾP SỨC MÙA THI VỚ\r\n                                </li>\r\n                                <li>\r\n                                    <b>From Voice recognition system:</b> CHO MÌNH HỎI CHÚT VỀ TẾP\r\n                                    SỨC TÙA THIN VỚI\r\n                                </li>\r\n                                <li>\r\n                                    <b>After Language model:</b> CHO MÌNH HỎI CHÚT VỀ TIẾP SỨC MÙA\r\n                                    THI VỚI\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <table className=\"table is-bordered  is-narrow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th>Without LM</th>\r\n                                    <th>Apply LM</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Word Error Rate</th>\r\n                                    <td>0.33207</td>\r\n                                    <td>0.17601</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Character Error Rate</th>\r\n                                    <td>0.13199</td>\r\n                                    <td>0.11574</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <p className=\"content\">\r\n                        We also have a workable ASR system that can be used to ask for university\r\n                        extracurricular activities.\r\n                    </p>\r\n                </section>\r\n                <div className=\"flex-wrapper\">\r\n                    <section className=\"section section--evaluation\">\r\n                        <h3 className=\"title is-3\">Evaluation</h3>\r\n                        <div className=\"content\">\r\n                            <ul>\r\n                                <li className=\"mt-1\">\r\n                                    <p>\r\n                                        <b>Achievements:</b> We have learned many new things and\r\n                                        gained a lot of experience while doing this thesis\r\n                                    </p>\r\n                                    <ul>\r\n                                        <li>The ability to collect and self-generate data</li>\r\n                                        <li>\r\n                                            The implementation of Deep Speech 2 model for Vietnamese\r\n                                            transcription\r\n                                        </li>\r\n                                        <li>\r\n                                            Achievements in experiences, knowledge, and soft skill\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"mt-1\">\r\n                                    <p>\r\n                                        <b>Drawbacks:</b> We are aware that this project still\r\n                                        contains inevitable errors. We would love to receive\r\n                                        feedback in order to improve furthermore\r\n                                    </p>\r\n                                    <ul>\r\n                                        <li> Data limitation</li>\r\n                                        <li>Lack of computing capability</li>\r\n                                        <li> Time constraint</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"mt-1 is-width-81\">\r\n                                    <p>\r\n                                        <b>Future improvements:</b> With just a small amount of self\r\n                                        generating data, the model showed promising results within\r\n                                        our scope. So the Vietnamese ASR can certainly be improved\r\n                                        in the future\r\n                                    </p>\r\n                                    <ul>\r\n                                        <li>Collect and generate more data</li>\r\n                                        <li>\r\n                                            Tuning the model with different configurations for\r\n                                            observation, hence being able to pick the most efficient\r\n                                            model\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <div className=\"figure-wrapper\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutVDP;\r\n","import React from 'react';\r\nimport Nav from './Nav';\r\nimport './css/scss/main.scss';\r\n// import { HashRouter, Route } from 'react-router-dom';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Homepage from './components/Homepage';\r\nimport AboutUs from './components/AboutUs';\r\nimport AboutVDP from './components/AboutVDP';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"main-thesis\">\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={AboutVDP} />\r\n                    <Route path=\"/about-us\" component={AboutUs} />\r\n                    <Route path=\"/demo\" component={Homepage} />\r\n                    <Route component={() => <div>404 Not found </div>} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}